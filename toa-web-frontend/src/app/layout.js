import { Inter } from "next/font/google";
import "./globals.css";
import Nav from "./components/Nav";
import Footer from "./components/Footer";
import { fetchDataOriginAPI } from "./utils/hooks/fetchData";
import { cookies } from "next/headers";
import RecoilContextProvider from "./utils/RecoilContextProvider";
import ExplainTermBox from "./components/elements/ExplainTermBox";
import yaml from "js-yaml"
const inter = Inter({ subsets: ["latin"] });

// export const metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };


export async function generateMetadata() {
  // Assuming you fetch the metadata from Kirby
  const cookieStore = cookies();
  let currentLanguage = cookieStore.get("language")?.value || "en";

  const metadataQuery = {
    query: `page("navigationbar")`, // Adjust to your Kirby structure
    select: {
      meta_title: true, 
      meta_description: true, 
      meta_image: true, 
      meta_subject: true, 
      meta_keyword: true, 
      meta_author: true, 
      meta_copyright: true, 
    },
  };
  
  const metadataData = await fetchDataOriginAPI({
    bodyD: metadataQuery,
    language: currentLanguage,
  });

 
  metadataData.result.meta_image = `${process.env.KB_API_FILE}/${yaml.load(
    metadataData.result.meta_image
  )}`
  const { 
    meta_title,
    meta_description,
    meta_image,
    meta_subject,
    meta_keyword,
    meta_author,
    meta_copyright,
   } = metadataData.result;

  // Return dynamic metadata
  return {
    title: meta_title || "Default Title",
    description: meta_description || "Default Description",
    keywords: meta_keyword || "default, keywords", // Meta keywords
    author: meta_author || "Default Author", // Meta author
    copyright: meta_copyright || "Default Copyright", // Meta copyright
    openGraph: {
      title: meta_title || "Default OG Title",
      description: meta_description || "Default OG Description",
      images: [
        {
          url: meta_image || "/default-image.jpg", // Open Graph image
          width: 1200,
          height: 630,
          alt: meta_title || "Default Image Alt",
        },
      ],
    },
    twitter: {
      card: "summary_large_image",
      title: meta_title || "Default Twitter Title",
      description: meta_description || "Default Twitter Description",
      image: meta_image || "/default-image.jpg",
    },
    subject: meta_subject || "Default Subject", // Custom meta tag for subject
  };
}


export default async function RootLayout({ children }) {
  const cookieStore = cookies();
  let currentLanguage = cookieStore.get("language")?.value || "en";
  

  const bodyData = {
    query: `page("footer")`,
    select: {
      id: true,
      // about
      footer_about: true,
      // contact
      footer_contact_name: true,
      footer_contact_email: true,
      footer_contact_meta: true,
      footer_contact_instagram: true,
      // other
      privacy: true,
      legal: true,
      name: true,
      // option page
      footer_optional_page: true
    },
  };
  const footerData = await fetchDataOriginAPI({
    bodyD: bodyData,
    language: currentLanguage,
  });

  const bodyData2 = {
    query: `page("navigationbar")`,
    select: {
      id: true,
      nav_title: true,
      nav_menu: true,
      // nav_3d: true,
    },
  };
  const navData = await fetchDataOriginAPI({
    bodyD: bodyData2,
    language: currentLanguage,
  });

// favicon:	.ico	
// icon:	.ico, .jpg, .jpeg, .png, .svg	
// apple-icon:	.jpg, .jpeg, .png	
  return (
    <html suppressHydrationWarning={true} lang="en">
      <head>
        {/* Favicon */}
        <link rel="icon" href="/icon.ico" sizes="any" type="image/x-icon"  />
        {/* Icon */}
        {/* <link rel="icon" href="/icon-32x32.png" type="image/png" sizes="32x32" />
        <link rel="icon" href="/icon-16x16.png" type="image/png" sizes="16x16" /> */}
        {/* Apple-Icon */}
      
        <link rel="apple-touch-icon" href="/apple-touch-icon-180x180.png" sizes="180x180" type="image/png" />
        {/* <link rel="apple-touch-icon" href="/apple-icon-120x120.png" sizes="120x120" type="image/png" />
        <link rel="apple-touch-icon" href="/apple-icon-152x152.png" sizes="152x152" type="image/png" />
        <link rel="apple-touch-icon" href="/apple-icon-167x167.png" sizes="167x167" type="image/png" />
        <link rel="apple-touch-icon" href="/apple-icon-76x76.png" sizes="76x76" type="image/png" /> */}
      </head>
      <body suppressHydrationWarning={true} className={inter.className}>
      <RecoilContextProvider>
        <ExplainTermBox />
        <main id="mainC" className="w-screen min-h-[100svh] lg:min-h-screen h-full overflow-y-scroll relative">
          <Nav data={navData.result} />
          {children}
          <Footer footerData={footerData.result} />
        </main>
        </RecoilContextProvider>
      </body>
    </html>
  );
}
